version: 2

anchors:
  - &node_job
    working_directory: ~/expo
    docker:
      - image: circleci/node:8

  - &default_env_vars
    TERM: xterm-color
    YARN_CACHE_FOLDER: ~/.cache/yarn

  - &set_up_environment
    run:
      name: Set up the environment
      command: |
        # Clone the submodules
        git submodule update --init --remote --depth 1

        # Trust all of the .envrc files for direnv
        find . -name '.envrc' -exec direnv allow {} \;

        echo '--install.frozen-lockfile true' >> ~/.yarnrc
        echo '--install.non-interactive true' >> ~/.yarnrc
        echo 'disable-self-update-check true' >> ~/.yarnrc

        cat << 'EOF' >> $BASH_ENV
        export PATH=$PATH:$(yarn global bin)
        export PATH=$PATH:$(npm config get prefix)/bin

        export ANDROID_NDK_VERSION=android-ndk-r10e
        export ANDROID_NDK_FILE=${ANDROID_NDK_VERSION}-linux-x86_64.bin
        export ANDROID_NDK_URL=https://dl.google.com/android/ndk/${ANDROID_NDK_FILE}
        export ANDROID_NDK=/opt/${ANDROID_NDK_VERSION}
        export ANDROID_HOME=/usr/local/android-sdk-linux
        export ANDROID_SDK=/usr/local/android-sdk-linux
        export ANDROID_SDK_URL=https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip
        EOF
        echo "source $BASH_ENV" >> ~/.bash_profile

  - &install_workspace_dependencies
    run:
      name: Install Yarn workspace dependencies (node_modules)
      command: |
        yarn global add gulp-cli
        # Run `yarn install` from the workspace root to install all of the workspaces' dependencies
        # including each other if there are co-dependencies
        yarn install

  - &install_android_dependencies
    run:
      name: Install Android dependencies
      command: |
        sudo su
        mkdir -p ${ANDROID_HOME}
        curl -L "${ANDROID_SDK_URL}" > ${ANDROID_HOME}/sdk.zip
        cd ${ANDROID_HOME}
        unzip -q sdk.zip
        rm sdk.zip
        # prevents warnings about missing repo config
        mkdir -p ${HOME}/.android
        touch ${HOME}/.android/repositories.cfg

        # PATH ${ANDROID_HOME}/platform-tools:${PATH}
        # PATH ${ANDROID_HOME}/tools:${PATH}
        # PATH ${ANDROID_HOME}/tools/bin:${PATH}
        # PATH ${ANDROID_HOME}/build-tools/25.0.0/:${PATH}

        yes | sdkmanager --licenses > /dev/null

        # Install Android SDK components
        sdkmanager \
            "platform-tools" \
            "platforms;android-23" \
            "build-tools;25.0.0" \
            "extras;android;m2repository" \
            "extras;google;m2repository"

        # Install Android NDK
        # i have no clue why some of this is here, but it's working elsewhere
        # it appears to install the NDK version expo needs, so that's cool
        mkdir /ndk_setup
        cd /ndk_setup
        curl -L ${ANDROID_NDK_URL} > ${ANDROID_NDK_FILE}
        chmod +x ${ANDROID_NDK_FILE}
        sync ./${ANDROID_NDK_FILE}
        mv ./${ANDROID_NDK_VERSION} ${ANDROID_NDK}
        cp -R \
          ${ANDROID_NDK}/toolchains/arm-linux-androideabi-4.8/prebuilt/linux-x86_64 \
          ${ANDROID_NDK}/toolchains/arm-linux-androideabi-4.8/prebuilt/linux-x86
        cp -R \
          ${ANDROID_NDK}/toolchains/x86-4.8/prebuilt/linux-x86_64 \
          ${ANDROID_NDK}/toolchains/x86-4.8/prebuilt/linux-x86
        cd && rm -rf /ndk_setup

  - &restore_yarn_cache
    restore_cache:
      # TODO: make the cache key depend on {{ checksum "yarn.lock" }} once we have a yarn.lock file
      key: yarn-v0-{{ .Branch }}

  - &save_yarn_cache
    save_cache:
      key: yarn-v0-{{ .Branch }}
      paths:
        - ~/.cache/yarn  # set by YARN_CACHE_FOLDER

workflows:
  version: 2

  # JavaScript packages that make up the SDK
  sdk:
    jobs:
      - expo_sdk
      - babel_preset

  # Android and iOS clients
  client:
    jobs:
      - home
      - android

jobs:
  expo_sdk:
    <<: *node_job
    environment:
      <<: *default_env_vars
    steps:
      - checkout
      - *set_up_environment
      - *restore_yarn_cache
      - *install_workspace_dependencies
      - *save_yarn_cache
      - run:
          name: Lint
          working_directory: ~/expo/packages/expo
          command: yarn lint --max-warnings 0

  babel_preset:
    <<: *node_job
    environment:
      <<: *default_env_vars
    steps:
      - checkout
      - *set_up_environment
      - *restore_yarn_cache
      - *install_workspace_dependencies
      - *save_yarn_cache
      - run:
          name: Unit tests
          working_directory: ~/expo/packages/babel-preset-expo
          command: yarn jest --maxWorkers 2

  home:
    <<: *node_job
    environment:
      <<: *default_env_vars
    steps:
      - checkout
      - *set_up_environment
      - *restore_yarn_cache
      - *install_workspace_dependencies
      - *save_yarn_cache

  android:
    <<: *node_job
    resource_class: xlarge
    environment:
      <<: *default_env_vars
    steps:
      - checkout
      - *set_up_environment
      - *restore_yarn_cache
      - *install_workspace_dependencies
      - *install_android_dependencies
      # - *restore_gradle_cache
      - run:
          name: Build Android
          working_directory: ~/expo/android
          command: |
            ../tools-public/generate-dynamic-macros-android.sh
            # force fetching dependencies
            ./gradlew :app:preBuild || true # but permit failure bc we'll try again
            ./gradlew :app:assembleProdMinSdkProdKernelRelease

            # TODO sign the apk:

            # prep keystore
            # echo $ANDROID_KEYSTORE_B64 | base64 -d > exponentkeystore.jks

            #  zipalign -v -p 4 ./app/build/outputs/apk/prodMinSdkProdKernel/release/app-prodMinSdk-prodKernel-release-unsigned.apk app-prod-release-unsigned-aligned.apk

            #  apksigner sign --ks exponentkeystore.jks --ks-key-alias $ANDROID_KEY_ALIAS --ks-pass env:ANDROID_KEYSTORE_PASSWORD --key-pass env:ANDROID_KEY_PASSWORD --out exponent-release.apk app-prod-release-unsigned-aligned.apk
      # - store_artifacts:
      #     path: ~/expo/android/exponent-release.apk
      # - *save_gradle_cache
      - *save_yarn_cache
